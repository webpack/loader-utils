name: loader-utils

on:
  push:
    branches:
      - master
      - next
  pull_request:
    branches:
      - master
      - next

permissions:
  contents: read #  to fetch code (actions/checkout)

jobs:
  lint:
    permissions:
      contents: read #  to fetch code (actions/checkout)
      pull-requests: read #  to get commits in PR (wagoid/commitlint-github-action)

    name: Lint - ${{ matrix.os }} - Node v${{ matrix.node-version }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [12.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint

      - name: Security audit
        run: yarn audit --groups dependencies

      - name: Check commit message
        uses: wagoid/commitlint-github-action@v4

  test:
    name: Test - ${{ matrix.os }} - Node v${{ matrix.node-version }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [12.x, 14.x, 16.x, 17.x]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Git
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf input

      - uses: actions/checkout@v2
      - uses: actions/github-script@v7
        id: calculate_architecture
        with:
          result-encoding: string
          script: |
            if ('${{ matrix.os }}' === 'macos-latest' && '${{ matrix['node-version'] }}' === '12.x') {
              return "x64"
            } else {
              return ''
            }
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ steps.calculate_architecture.outputs.result }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn

      - name: Run tests
        run: yarn test:only

      - name: Submit coverage data to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
